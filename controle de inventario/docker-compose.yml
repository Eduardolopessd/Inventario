services:

  banco:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: inventario
      MYSQL_USER: inventario_user
      MYSQL_PASSWORD: inventario_password

    ports:
      - "3309:3306" # Porta do host : Porta do contêiner MySQL
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot_password"]
      interval: 5s
      timeout: 20s
      retries: 15
      start_period: 30s

  apirest:
    build:
      context: . # O contexto é a raiz do projeto
      dockerfile: Dockerfile # Aponta para o Dockerfile único na raiz
    depends_on:
      banco:
        condition: service_healthy # Garante que só inicia se o DB estiver saudável
    ports:
      - "8031:8080" # Porta do host : Porta do contêiner
    environment:
      environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://banco:3306/inventario?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: inventario_user
      SPRING_DATASOURCE_PASSWORD: inventario_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
   
    restart: on-failure
    networks:
      - app-network

  Frontend:
    image: nginx:alpine
    container_name: Frontend
    depends_on:
      - apirest
    volumes:
      - ./site:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

    networks:
      - app-network
    ports:
      - "8030:80"
    environment:
      TZ: America/Sao_Paulo

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
